// jenkinsfile for running integrationtest without maven deploy
@Library('pipeline-library') pipelineLibrary
@Library('pv-pipeline-library') pvPipelineLibrary


import io.wcm.devops.jenkins.pipeline.utils.logging.Logger
import org.jenkinsci.plugins.workflow.libs.Library

import static io.wcm.devops.jenkins.pipeline.utils.ConfigConstants.*
import static de.provision.devops.jenkins.pipeline.utils.ConfigConstants.*

def customCompileStage(Map config, superImpl) {
  Logger log = new Logger("customCompileStage")
  log.info("before superImpl")
  superImpl(config)
  log.info("after superImpl")
}

def customPreparationStage(Map config, superImpl) {
  Logger log = new Logger("customPreparationStage")
  log.info("before superImpl")
  superImpl(config)
  log.info("after superImpl")
}

def customAnalyzeStage(Map config, superImpl) {
  Logger log = new Logger("customAnalyzeStage")
  log.info("before superImpl")
  superImpl(config)
  log.info("after superImpl")
}

def customResultsStage(Map config, superImpl) {
  Logger log = new Logger("customResultsStage")
  log.info("before superImpl")
  superImpl(config)
  log.info("after superImpl")
}

void preStage1(Map config) {
  Logger log = new Logger("preStage1")
  stage("preStage1") {
    log.info("Hello World!")
  }
}

void preStage2(Map config) {
  Logger log = new Logger("preStage2")
  stage("preStage2") {
    log.info("Hello World!")
  }
}

void postStage1(Map config) {
  Logger log = new Logger("postStage1")
  stage("postStage1") {
    log.info("Hello World!")
  }
}

void postStage2(Map config) {
  Logger log = new Logger("postStage2")
  stage("postStage2") {
    log.info("Hello World!")
  }
}

Map config = [
  (BUILD_DEFAULT)       : [
    (BUILD_DEFAULT_PRE_EXTENSIONS) : [
      this.&preStage1,
      this.&preStage2,
    ],
    (BUILD_DEFAULT_POST_EXTENSIONS): [
      this.&postStage1,
      this.&postStage2,
    ],
  ],
  (MAVEN): [
    (MAVEN_DEFINES): [
      // "maven.test.failure.ignore" : true,
      //"maven.test.skip" : true
    ],
  ],
  (PROPERTIES)          : [
    // disable triggers
    (PROPERTIES_PIPELINE_TRIGGERS): [
      pollSCM("H H * * *")
    ]
  ],
  (STAGE_ANALYZE)       : [
    (STAGE_ANALYZE_EXTEND): this.&customAnalyzeStage,
  ],
  (STAGE_COMPILE)       : [
    (STAGE_COMPILE_EXTEND): this.&customCompileStage,
    (MAVEN)               : [
      (MAVEN_GOALS): "clean install"
    ]
  ],
  (STAGE_PREPARATION) : [
    (STAGE_PREPARATION_EXTEND) : this.&customPreparationStage,
    (STAGE_PREPARATION_PURGE_SHAPSHOTS): false
  ],
  (STAGE_RESULTS): [
    (STAGE_RESULTS_EXTEND): this.&customResultsStage,
  ],
  (TIMEOUT): [
    (TIMEOUT_TIME): 60,
  ],
]

routeDefaultJenkinsFile(config)
